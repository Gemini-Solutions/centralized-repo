env.BRANCH_CENTRALIZED_FILES="*/main"
env.SSH_LINK_CENTRALIZED_FILES="git@github.com:Gemini-Solutions/centralized-repo.git"

node {
  stage('SCM') {
    checkout scm
  }
}
node('image_builder_trivy') { 
   stage('hpipe_backend_checkout') {
         dir ('hpipe_backend') {
         checkout([$class: 'GitSCM', branches: [[name: '*/development']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg:  [], \
userRemoteConfigs: [[credentialsId: 'admingithub', url: 'git@github.com:Gemini-Solutions/hpipe_backend.git']]])
         }
    }
  sh 'ls'
  try {
        stage('Checkout_Centralized_Files') {
           dir ('hpipe_backend') {
               checkout([$class: 'GitSCM', 
               branches: [[name: "$BRANCH_CENTRALIZED_FILES"]], 
               doGenerateSubmoduleConfigurations: false, 
               extensions: [], 
               submoduleCfg:  [], 
               userRemoteConfigs: [[credentialsId: 'admingithub', 
               url: "$SSH_LINK_CENTRALIZED_FILES", 
               poll: 'false']]])
	       sh 'ls -la python/hpipe_backend/'
	       sh 'ls'
// 	       sh 'cd Java'
	       sh 'pwd'
           }
       }    
   stage('Build_image') {
            dir ('hpipe_backend') {
              container('docker-image-builder-trivy') {
                withCredentials([usernamePassword(credentialsId: 'docker_registry', passwordVariable: 'docker_pass', usernameVariable: 'docker_user')]) {
	      sh 'cat DockerFile'
	      sh 'ls'
              sh 'docker image build -f python/hpipe_backend/DockerFile -t registry-np.geminisolutions.com/hpipe/hpipe_backend/hpipe:1.0-$BUILD_NUMBER -t registry-np.geminisolutions.com/hpipe/hpipe_backend/hpipe .'
              sh 'trivy image -f json --timeout 20m registry-np.geminisolutions.com/hpipe/hpipe_backend/hpipe:1.0-$BUILD_NUMBER > trivy-report.json'
			archiveArtifacts artifacts: 'trivy-report.json', onlyIfSuccessful: true
                   sh '''docker login -u $docker_user -p $docker_pass https://registry-np.geminisolutions.com'''
//               sh 'docker push registry-np.geminisolutions.com/hpipe/hpipe_backend/hpipe:1.0-$BUILD_NUMBER'
//               sh 'docker push registry-np.geminisolutions.com/hpipe/hpipe_backend/hpipe'
           }
         }
        }
        stage('Deployment_stage') {
               dir ('hpipe_backend') {
                   container('docker-image-builder-trivy') {
                   kubeconfig(credentialsId: 'KubeConfigCred') {
//                    sh '/usr/local/bin/kubectl apply -f python/hpipe_backend/Deployment_dev.yaml -n dev'
//                    sh '/usr/local/bin/kubectl rollout restart Deployment hpipebackend -n dev'

                   }
                   }
               }
           }
      }
  } finally {
     //sh 'echo current_image="registry-np.geminisolutions.com/hpipe/hpipe_backend/hpipe:1.0-$BUILD_NUMBER" > build.properties'
     //archiveArtifacts artifacts: 'build.properties', onlyIfSuccessful: true
  }
    }
