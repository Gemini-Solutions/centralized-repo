node('image_builder_trivy') {
  stage('backend_checkout') {
    dir('ECBackend') {
      checkout([$class: 'GitSCM', branches: [
          [name: '*/dev-backend']
        ], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], \
        userRemoteConfigs: [
          [credentialsId: 'admingithub', url: 'git@github.com:Gemini-Solutions/ec-python.git', poll: 'false']
        ]
      ])
    }
  }
  try {
        stage('Checkout_Centralized_Files') {
           dir ('ECBackend/centralized') {
               checkout([$class: 'GitSCM', 
               branches: [[name: '*/main']], 
               doGenerateSubmoduleConfigurations: false, 
               extensions: [], 
               submoduleCfg:  [], 
               userRemoteConfigs: [[credentialsId: 'admingithub', 
               url: 'git@github.com:Gemini-Solutions/centralized-repo.git', 
               poll: 'false']]])
	             sh 'ls -la'
           }
       }
    stage('Build_image') {
      dir('ECBackend') {
        container('docker-image-builder-trivy') {
          withCredentials([usernamePassword(credentialsId: 'docker_registry', passwordVariable: 'docker_pass', usernameVariable: 'docker_user')]) {
            sh 'docker image build -f ECBackend/centralized/Dockerfile -t registry-np.geminisolutions.com/ec_backend/ec_backend:1.0-$BUILD_NUMBER -t registry-np.geminisolutions.com/ec_backend/ec_backend .'
            sh 'trivy image -f json --timeout 20m registry-np.geminisolutions.com/ec_backend/ec_backend:1.0-$BUILD_NUMBER > trivy-report.json'
            archiveArtifacts artifacts: 'trivy-report.json', onlyIfSuccessful: true
            sh ''
            'docker login -u $docker_user -p $docker_pass https://registry-np.geminisolutions.com'
            ''
            sh 'docker push registry-np.geminisolutions.com/ec_backend/ec_backend:1.0-$BUILD_NUMBER'
            sh 'docker push registry-np.geminisolutions.com/ec_backend/ec_backend'
            sh 'rm -rf build/'
          }
        }
      }
    }
    stage('Deployment_stage') {
      dir('ECBackend') {
        container('docker-image-builder-trivy') {
          kubeconfig(credentialsId: 'KubeConfigCred') {
            sh '/usr/local/bin/kubectl apply -f ECBackend/centralized/Deployment-beta.yaml -n dev'
            sh '/usr/local/bin/kubectl rollout restart Deployment ECBackend -n dev'
          }
        }
      }
    }
  } finally {
    //sh 'echo current_image="registry-np.geminisolutions.com/gemeco/jewel:1.0-$BUILD_NUMBER" > build.properties'
    //archiveArtifacts artifacts: 'build.properties', onlyIfSuccessful: true
  }
}
