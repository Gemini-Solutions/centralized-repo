node('node_runner_18') {
      stage('frontend_checkout') {
             dir ('EC-Dashboard') {
             checkout([$class: 'GitSCM', branches: [[name: '*/dev-frontend']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg:  [], \
    userRemoteConfigs: [[credentialsId: 'admingithub', url: 'git@github.com:Gemini-Solutions/ec-python.git', poll: 'false']]])
             }
      }
	      
      stage('Nodejs_Build') {
	      container('nodejs-18') {
                dir ('EC-Dashboard'){
                  sh 'rm -rf package-lock.json'
                  //sh 'npm cache clean --force'
                  sh 'npm install'
                  sh 'npm run build'
            }
           }
      }
}
    node('image_builder_trivy') {
       try {
	       stage('Checkout_Centralized_Files') {
           dir ('EC-Dashboard/centralized') {
               checkout([$class: 'GitSCM', 
               branches: [[name: '*/main']], 
               doGenerateSubmoduleConfigurations: false, 
               extensions: [], 
               submoduleCfg:  [], 
               userRemoteConfigs: [[credentialsId: 'admingithub', 
               url: 'git@github.com:Gemini-Solutions/centralized-repo.git', 
               poll: 'false']]])
	             sh 'ls -la'
           }
       }
       stage('Build_image') {
                dir ('EC-Dashboard') {
                  container('docker-image-builder-trivy') {
                  withCredentials([usernamePassword(credentialsId: 'docker_registry', passwordVariable: 'docker_pass', usernameVariable: 'docker_user')]) {
                  sh 'docker image build -f centralized/EC-Frontend/Dockerfile -t registry-np.geminisolutions.com/ec-dashboard/ec-dashboard:1.0-$BUILD_NUMBER -t registry-np.geminisolutions.com/ec-dashboard/ec-dashboard .'
                  sh 'trivy image -f json --timeout 20m registry-np.geminisolutions.com/ec-dashboard/ec-dashboard:1.0-$BUILD_NUMBER > trivy-report.json'
	      archiveArtifacts artifacts: 'trivy-report.json', onlyIfSuccessful: true	
                        sh '''docker login -u $docker_user -p $docker_pass https://registry-np.geminisolutions.com'''
                  sh 'docker push registry-np.geminisolutions.com/EC-Dashboard/EC-Dashboard:1.0-$BUILD_NUMBER'
                  sh 'docker push registry-np.geminisolutions.com/EC-Dashboard/EC-Dashboard'
                  sh 'rm -rf build/'
               }
             }
            }
       }
       stage('Deployment_stage') {
               dir ('EC-Dashboard') {
                   container('docker-image-builder-trivy') {
                   kubeconfig(credentialsId: 'KubeConfigCred') {
                   sh '/usr/local/bin/kubectl apply -f centralized/EC-Frontend/Deployment-beta.yaml -n dev'
                   sh '/usr/local/bin/kubectl rollout restart Deployment ec-dashboard -n dev'
                   }
                   }
               }
           }
    } finally {
         //sh 'echo current_image="registry-np.geminisolutions.com/gemeco/jewel:1.0-$BUILD_NUMBER" > build.properties'
         //archiveArtifacts artifacts: 'build.properties', onlyIfSuccessful: true
         }
        }
